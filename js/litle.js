// Litle PayPage Stuff

function convertHexUUIDToB64 (UUID) {
    function packHStar (bytes) {
        var word, result = '';

        for (i = 0; i < bytes.length; i += 2) {
            word = bytes[i];
            if (((i + 1) >= bytes.length) || typeof bytes[i + 1] === 'undefined') {
                word += '0';
            } else {
                word += bytes[i + 1];
            }
            result += String.fromCharCode(parseInt(word, 16));
        }

        return result;
    }

    return $.base64('btoa', packHStar(
        UUID.replace(/-/g, "").toLowerCase()
    ));
}

var litleFunctions = {
    setLitleResponseFields: function (response) {
        document.getElementById('response__code').value         = response.response;
        document.getElementById('response__message').value      = response.message;
        document.getElementById('response__responseTime').value = response.responseTime;
        document.getElementById('response__litleTxnId').value   = response.litleTxnId;
        document.getElementById('response__type').value         = response.type;
    },

    // This is a random GUID. Same format as the basket ID we use on the real checkout - which is generated by the API
    generateOrderID: function () {
        var r4 = function() {
           return (((1+Math.random())*0x10000)|0).toString(16).substring(1).toUpperCase();
        };

        var UUID = (r4()+r4()+"-"+r4()+"-"+r4()+"-"+r4()+"-"+r4()+r4()+r4());

        return convertHexUUIDToB64(UUID);
    },

    timeoutOnLitle: function () {
        var $responseOutput = $("<pre/>").text("API Unavailable - Timeout");
    
        $(".api-response").prepend($responseOutput).show();
    
        return false;
    },

    logResponse: function (response) {
        litleFunctions.setLitleResponseFields(response);

        // Pretty print the JSON and display it.
        var $responseOutput = $("<pre/>").text(JSON.stringify(response, undefined, 2));
        $(".api-response").prepend($responseOutput).show();

        return false;
    },

    submitAfterLitle: function (response) {
        litleFunctions.setLitleResponseFields(response);

        return false;
    }
}









function setLitleResponseFields(response) {
    document.getElementById('response__code').value = response.response;
    document.getElementById('response__message').value = response.message;
    document.getElementById('response__responseTime').value = response.responseTime;
    document.getElementById('response__reportGroup').value = response.reportGroup;
    document.getElementById('response__merchantTxnId').value = response.id;
    document.getElementById('response__orderId').value = response.orderId;
    document.getElementById('response__litleTxnId').value = response.litleTxnId;
    document.getElementById('response__type').value = response.type;
}

function submitAfterLitle(response) {
    setLitleResponseFields(response);

    return false;
}

function onErrorAfterLitle(response) {
    setLitleResponseFields(response);

    return false;
}


$(document).ready(function() {
    $("#submit-payment").click(function() {
        if (typeof new LitlePayPage() !== "object") {
            litleFunctions.logResponse("API Unavailable");

            return false;
        }

        // Normally this data is provided by our API, generate random GUIDs for this minimal testcase
        $("#request__orderId").val( litleFunctions.generateOrderID() );
        $("#request__merchantTxnId").val( litleFunctions.generateOrderID() );

        // Clear anything that may be in the form fields
        setLitleResponseFields({
            "response": "",
            "message": ""
        });

        // Get the data from the form fields. Note we are using browser native selectors
        // Litle API requires the element directly, not the value, and not a jQuery object
        var formFields = {
            "accountNum": document.getElementById('ccNum'),
            "paypageRegistrationId": document.getElementById('paypageRegistrationId'),
            "bin": document.getElementById('bin')
        };

        // Setup the request
        var litleRequest = {
            "paypageId": document.getElementById("request__paypageId").value,
            "id": document.getElementById("request__merchantTxnId").value,
            "orderId": document.getElementById("request__orderId").value,
            "reportGroup": document.getElementById("request__reportGroup").value,
            "url": 'https://request-prelive.np-securepaypage-litle.com'
        };

        new LitlePayPage().sendToLitle(
            litleRequest, formFields, submitAfterLitle, onErrorAfterLitle, litleFunctions.timeoutOnLitle, 5000
        );

        return false;
    });
});
